---
- name: "copy id_rsa, the one used in the deployment keys in the code repository"
  copy:
    src: ./secrets/id_rsa
    dest: "/home/{{ remote_user }}/.ssh/id_rsa"
    owner: "{{ remote_user }}"
    group: "{{ remote_user }}"
    mode: 0600

- name: apt update
  apt:
    update_cache: yes

- name: install prerequisites packages
  apt: name={{item}}
  with_items:
    - python3-pip
    - python3-mysqldb
    - software-properties-common
    - unzip

- name: Create the provision directory
  ansible.builtin.file:
    path: /home/{{ remote_user }}/provision
    state: directory
    recurse: yes
    owner: "{{ remote_user }}"
    group: "{{ remote_user }}"

- name: Install AWS Cli
  shell:
    chdir: "/home/{{ remote_user }}/provision"
    creates: awscli_installed.txt
    cmd: "{{ item }}"
  become: Yes
  with_items:
    - curl "https://awscli.amazonaws.com/awscli-exe-linux-aarch64.zip" -o "awscliv2.zip"
    - unzip awscliv2.zip
    - ./aws/install --update
    - touch awscli_installed.txt

- name: Install cerbot with options
  community.general.snap:
    name: certbot
    classic: true

- name: Create symbolic links for certbot
  file:
    src: /snap/bin/certbot
    dest: "{{ item }}"
    state: link
    force: no
  with_items:
    - /usr/local/bin/certbot
    - /usr/bin/certbot


- name: Register certbot
  shell: |
    certbot -n register --agree-tos --email {{certs_email}}
    touch /etc/letsencrypt/.registered
  args:
    creates: /etc/letsencrypt/.registered
  tags:
    - nginx
    - certbot
    -
- name: Setup cronjob for renewal
  cron:
    name: certbot-renewal
    job: "/bin/bash -lc '/usr/local/bin/certbot -q renew'"
    minute: "0"
    hour: "14"
  tags:
    - nginx
    - certbot
    -
- name: Setup cronjob for renewal
  cron:
    name: certbot-renewal
    job: "/bin/bash -lc '/usr/local/bin/certbot -q renew'"
    minute: "0"
    hour: "14"
  tags:
    - nginx
    - certbot